{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/leon/Development/code/phase2/code_challenge2/phase-2-hooks-code-challenge-bank-of-flatiron-Mugo-leon/src/components/TransactionsList.js\",\n    _s = $RefreshSig$();\n\n// import React from \"react\";\n// import Transaction from \"./Transaction\";\n// function TransactionsList() {\n//   return (\n//     <table className=\"ui celled striped padded table\">\n//       <tbody>\n//         <tr>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Date</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Description</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Category</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Amount</h3>\n//           </th>\n//         </tr>\n//         {/* render a list of <Transaction> components here */}\n//       </tbody>\n//     </table>\n//   );\n// }\n// export default TransactionsList;\nimport React, { useState, useEffect } from \"react\";\nimport Transaction from \"./Transaction\";\n\nfunction TransactionsList() {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8001/transactions\");\n\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n\n        const data = await response.json();\n        setTransactions(data.transactions);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"ui celled striped padded table\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"ui center aligned header\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"ui center aligned header\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"ui center aligned header\",\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"ui center aligned header\",\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), transactions && transactions.map(transaction => /*#__PURE__*/_jsxDEV(Transaction, {\n        date: transaction.date,\n        description: transaction.description,\n        category: transaction.category,\n        amount: transaction.amount\n      }, transaction.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionsList, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = TransactionsList;\nexport default TransactionsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"sources":["/home/leon/Development/code/phase2/code_challenge2/phase-2-hooks-code-challenge-bank-of-flatiron-Mugo-leon/src/components/TransactionsList.js"],"names":["React","useState","useEffect","Transaction","TransactionsList","transactions","setTransactions","fetchData","response","fetch","ok","Error","data","json","error","console","map","transaction","date","description","category","amount","id"],"mappings":";;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAA5B;;AACA,YAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,gBAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AACD;;AACD,cAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAP,QAAAA,eAAe,CAACM,IAAI,CAACP,YAAN,CAAf;AACD,OAPD,CAOE,OAAOS,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACD;AACF,KAXD;;AAaAP,IAAAA,SAAS;AACV,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBACE;AAAO,IAAA,SAAS,EAAC,gCAAjB;AAAA,2BACE;AAAA,8BACE;AAAA,gCACE;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAgBGF,YAAY,IAAIA,YAAY,CAACW,GAAb,CAAkBC,WAAD,iBAChC,QAAC,WAAD;AAEE,QAAA,IAAI,EAAEA,WAAW,CAACC,IAFpB;AAGE,QAAA,WAAW,EAAED,WAAW,CAACE,WAH3B;AAIE,QAAA,QAAQ,EAAEF,WAAW,CAACG,QAJxB;AAKE,QAAA,MAAM,EAAEH,WAAW,CAACI;AALtB,SACOJ,WAAW,CAACK,EADnB;AAAA;AAAA;AAAA;AAAA,cADe,CAhBnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GAlDQlB,gB;;KAAAA,gB;AAoDT,eAAeA,gBAAf","sourcesContent":["// import React from \"react\";\n// import Transaction from \"./Transaction\";\n\n// function TransactionsList() {\n//   return (\n//     <table className=\"ui celled striped padded table\">\n//       <tbody>\n//         <tr>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Date</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Description</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Category</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Amount</h3>\n//           </th>\n//         </tr>\n//         {/* render a list of <Transaction> components here */}\n//       </tbody>\n//     </table>\n//   );\n// }\n\n// export default TransactionsList;\nimport React, { useState, useEffect } from \"react\";\nimport Transaction from \"./Transaction\";\n\nfunction TransactionsList() {\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8001/transactions\");\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        setTransactions(data.transactions);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <table className=\"ui celled striped padded table\">\n      <tbody>\n        <tr>\n          <th>\n            <h3 className=\"ui center aligned header\">Date</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Description</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Category</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Amount</h3>\n          </th>\n        </tr>\n\n        {transactions && transactions.map((transaction) => (\n          <Transaction\n            key={transaction.id}\n            date={transaction.date}\n            description={transaction.description}\n            category={transaction.category}\n            amount={transaction.amount}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default TransactionsList;\n\n\n\n"]},"metadata":{},"sourceType":"module"}